// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vmware-tanzu/octant/pkg/api (interfaces: StreamingClientFactory)

// Package fake is a generated GoMock package.
package fake

import (
	context "context"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	api "github.com/vmware-tanzu/octant/pkg/api"
	config "github.com/vmware-tanzu/octant/pkg/config"
)

// MockStreamingClientFactory is a mock of StreamingClientFactory interface
type MockStreamingClientFactory struct {
	ctrl     *gomock.Controller
	recorder *MockStreamingClientFactoryMockRecorder
}

// MockStreamingClientFactoryMockRecorder is the mock recorder for MockStreamingClientFactory
type MockStreamingClientFactoryMockRecorder struct {
	mock *MockStreamingClientFactory
}

// NewMockStreamingClientFactory creates a new mock instance
func NewMockStreamingClientFactory(ctrl *gomock.Controller) *MockStreamingClientFactory {
	mock := &MockStreamingClientFactory{ctrl: ctrl}
	mock.recorder = &MockStreamingClientFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStreamingClientFactory) EXPECT() *MockStreamingClientFactoryMockRecorder {
	return m.recorder
}

// NewConnection mocks base method
func (m *MockStreamingClientFactory) NewConnection(arg0 http.ResponseWriter, arg1 *http.Request, arg2 api.ClientManager, arg3 config.Dash) (api.StreamingClient, context.CancelFunc, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewConnection", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(api.StreamingClient)
	ret1, _ := ret[1].(context.CancelFunc)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// NewConnection indicates an expected call of NewConnection
func (mr *MockStreamingClientFactoryMockRecorder) NewConnection(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewConnection", reflect.TypeOf((*MockStreamingClientFactory)(nil).NewConnection), arg0, arg1, arg2, arg3)
}

// NewTemporaryConnection mocks base method
func (m *MockStreamingClientFactory) NewTemporaryConnection(arg0 http.ResponseWriter, arg1 *http.Request, arg2 api.ClientManager) (api.StreamingClient, context.CancelFunc, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewTemporaryConnection", arg0, arg1, arg2)
	ret0, _ := ret[0].(api.StreamingClient)
	ret1, _ := ret[1].(context.CancelFunc)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// NewTemporaryConnection indicates an expected call of NewTemporaryConnection
func (mr *MockStreamingClientFactoryMockRecorder) NewTemporaryConnection(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewTemporaryConnection", reflect.TypeOf((*MockStreamingClientFactory)(nil).NewTemporaryConnection), arg0, arg1, arg2)
}
