name: Nightly releases
on:
  schedule:
    - cron:  '0 0 * * *'
jobs:
  nightly-build:
    name: Build nightly
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-node@v2.1.4
        with:
          node-version: '14'
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15.x
      - uses: actions/checkout@v2
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2.1.4
        if: github.event_name == 'push'
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-push-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-push-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-node-push-
      - uses: actions/cache@v2.1.4
        if: github.event_name == 'pull_request'
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-pr-${{ github.event.number }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-pr-${{ github.event.number }}-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-node-pr-${{ github.event.number }}-
            ${{ runner.os }}-node-push-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-node-push-
      - name: Build node modules
        run: |
          cd web
          npm ci --prefer-offline --no-audit
          npm run-script build
        shell: bash
      - name: Go tools
        env:
          GOFLAGS: -mod=vendor
        run: |
          go run build.go go-install
          go generate ./web
          go generate ./pkg/plugin/plugin.go
      - name: Upload web/rice-box.go
        uses: actions/upload-artifact@v2
        with:
          name: rice-web
          path: web/rice-box.go
      - name: Build electron binary
        env:
          GOFLAGS: -mod=vendor
        run: |
          go run build.go build-electron
      - name: Build electron
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          package_root: 'web'
          build_script_name: 'build-electron'
      - uses: google-github-actions/upload-cloud-storage@main
        with:
          credentials: ${{ secrets.GOOGLE_APP_JSON }}
          path: web/release
          destination: octant-nightlies/electron

  push:
    name: Run goreleaser
    needs: [nightly-build]
    runs-on: ubuntu-latest
    container: goreleaser/goreleaser:v0.128.0-cgo
    steps:
      - uses: actions/checkout@v2
      - name: Download web/rice-box.go
        uses: actions/download-artifact@v2
        with:
          name: rice-web
          path: web
      - name: Change permissions of rice files
        # Uploading artifact changes file permissions
        run: |
          chown -R $(whoami):$(whoami) .
      - name: Run goreleaser
        run: |
          git fetch --tags
          git tag -d nightly || :
          git tag nightly
          echo "$GOOGLE_APPLICATION_JSON" > /tmp/gs.json
          goreleaser -f .goreleaser-nightly.yml --rm-dist --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOOGLE_APPLICATION_JSON: ${{ secrets.GOOGLE_APP_JSON }}
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gs.json
