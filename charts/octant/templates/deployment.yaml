apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "octant.fullname" . }}
  labels:
{{ include "octant.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "octant.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "octant.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "octant.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: create-kubeconfig
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
          args:
            - |
              server=https://kubernetes.default:443

              ca=$(base64 -w 0 < /var/run/secrets/kubernetes.io/serviceaccount/ca.crt)
              token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
              namespace=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)

              cat <<EOF > /kube/config
              apiVersion: v1
              kind: Config
              clusters:
              - name: default-cluster
                cluster:
                  certificate-authority-data: ${ca}
                  server: ${server}
              contexts:
              - name: default-context
                context:
                  cluster: default-cluster
                  namespace: default
                  user: default-user
              current-context: default-context
              users:
              - name: default-user
                user:
                  token: ${token}
              EOF
          volumeMounts:
            - name: kube
              mountPath: /kube
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /octant
          args:
            - -v
            - --disable-open-browser
            - --kubeconfig
            - /kube/config
          env:
            - name: OCTANT_LISTENER_ADDR
              value: 0.0.0.0:8080
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: kube
              mountPath: /kube
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: kube
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
