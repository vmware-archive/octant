// Code generated by MockGen. DO NOT EDIT.
// Source: ../../pkg/cluster/info.go

// Package fake is a generated GoMock package.
package fake

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockInfoInterface is a mock of InfoInterface interface
type MockInfoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInfoInterfaceMockRecorder
}

// MockInfoInterfaceMockRecorder is the mock recorder for MockInfoInterface
type MockInfoInterfaceMockRecorder struct {
	mock *MockInfoInterface
}

// NewMockInfoInterface creates a new mock instance
func NewMockInfoInterface(ctrl *gomock.Controller) *MockInfoInterface {
	mock := &MockInfoInterface{ctrl: ctrl}
	mock.recorder = &MockInfoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInfoInterface) EXPECT() *MockInfoInterfaceMockRecorder {
	return m.recorder
}

// Context mocks base method
func (m *MockInfoInterface) Context() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Context")
	ret0, _ := ret[0].(string)
	return ret0
}

// Context indicates an expected call of Context
func (mr *MockInfoInterfaceMockRecorder) Context() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Context", reflect.TypeOf((*MockInfoInterface)(nil).Context))
}

// Cluster mocks base method
func (m *MockInfoInterface) Cluster() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Cluster")
	ret0, _ := ret[0].(string)
	return ret0
}

// Cluster indicates an expected call of Cluster
func (mr *MockInfoInterfaceMockRecorder) Cluster() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Cluster", reflect.TypeOf((*MockInfoInterface)(nil).Cluster))
}

// Server mocks base method
func (m *MockInfoInterface) Server() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Server")
	ret0, _ := ret[0].(string)
	return ret0
}

// Server indicates an expected call of Server
func (mr *MockInfoInterfaceMockRecorder) Server() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Server", reflect.TypeOf((*MockInfoInterface)(nil).Server))
}

// User mocks base method
func (m *MockInfoInterface) User() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "User")
	ret0, _ := ret[0].(string)
	return ret0
}

// User indicates an expected call of User
func (mr *MockInfoInterfaceMockRecorder) User() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "User", reflect.TypeOf((*MockInfoInterface)(nil).User))
}
