// Code generated by MockGen. DO NOT EDIT.
// Source: k8s.io/client-go/kubernetes/typed/authorization/v1 (interfaces: AuthorizationV1Interface,SelfSubjectAccessReviewInterface,SelfSubjectAccessReviewsGetter,SelfSubjectRulesReviewInterface,SelfSubjectRulesReviewsGetter)

// Package fake is a generated GoMock package.
package fake

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/authorization/v1"
	v10 "k8s.io/apimachinery/pkg/apis/meta/v1"
	v11 "k8s.io/client-go/kubernetes/typed/authorization/v1"
	rest "k8s.io/client-go/rest"
)

// MockAuthorizationV1Interface is a mock of AuthorizationV1Interface interface
type MockAuthorizationV1Interface struct {
	ctrl     *gomock.Controller
	recorder *MockAuthorizationV1InterfaceMockRecorder
}

// MockAuthorizationV1InterfaceMockRecorder is the mock recorder for MockAuthorizationV1Interface
type MockAuthorizationV1InterfaceMockRecorder struct {
	mock *MockAuthorizationV1Interface
}

// NewMockAuthorizationV1Interface creates a new mock instance
func NewMockAuthorizationV1Interface(ctrl *gomock.Controller) *MockAuthorizationV1Interface {
	mock := &MockAuthorizationV1Interface{ctrl: ctrl}
	mock.recorder = &MockAuthorizationV1InterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAuthorizationV1Interface) EXPECT() *MockAuthorizationV1InterfaceMockRecorder {
	return m.recorder
}

// LocalSubjectAccessReviews mocks base method
func (m *MockAuthorizationV1Interface) LocalSubjectAccessReviews(arg0 string) v11.LocalSubjectAccessReviewInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LocalSubjectAccessReviews", arg0)
	ret0, _ := ret[0].(v11.LocalSubjectAccessReviewInterface)
	return ret0
}

// LocalSubjectAccessReviews indicates an expected call of LocalSubjectAccessReviews
func (mr *MockAuthorizationV1InterfaceMockRecorder) LocalSubjectAccessReviews(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LocalSubjectAccessReviews", reflect.TypeOf((*MockAuthorizationV1Interface)(nil).LocalSubjectAccessReviews), arg0)
}

// RESTClient mocks base method
func (m *MockAuthorizationV1Interface) RESTClient() rest.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RESTClient")
	ret0, _ := ret[0].(rest.Interface)
	return ret0
}

// RESTClient indicates an expected call of RESTClient
func (mr *MockAuthorizationV1InterfaceMockRecorder) RESTClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RESTClient", reflect.TypeOf((*MockAuthorizationV1Interface)(nil).RESTClient))
}

// SelfSubjectAccessReviews mocks base method
func (m *MockAuthorizationV1Interface) SelfSubjectAccessReviews() v11.SelfSubjectAccessReviewInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelfSubjectAccessReviews")
	ret0, _ := ret[0].(v11.SelfSubjectAccessReviewInterface)
	return ret0
}

// SelfSubjectAccessReviews indicates an expected call of SelfSubjectAccessReviews
func (mr *MockAuthorizationV1InterfaceMockRecorder) SelfSubjectAccessReviews() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelfSubjectAccessReviews", reflect.TypeOf((*MockAuthorizationV1Interface)(nil).SelfSubjectAccessReviews))
}

// SelfSubjectRulesReviews mocks base method
func (m *MockAuthorizationV1Interface) SelfSubjectRulesReviews() v11.SelfSubjectRulesReviewInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelfSubjectRulesReviews")
	ret0, _ := ret[0].(v11.SelfSubjectRulesReviewInterface)
	return ret0
}

// SelfSubjectRulesReviews indicates an expected call of SelfSubjectRulesReviews
func (mr *MockAuthorizationV1InterfaceMockRecorder) SelfSubjectRulesReviews() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelfSubjectRulesReviews", reflect.TypeOf((*MockAuthorizationV1Interface)(nil).SelfSubjectRulesReviews))
}

// SubjectAccessReviews mocks base method
func (m *MockAuthorizationV1Interface) SubjectAccessReviews() v11.SubjectAccessReviewInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubjectAccessReviews")
	ret0, _ := ret[0].(v11.SubjectAccessReviewInterface)
	return ret0
}

// SubjectAccessReviews indicates an expected call of SubjectAccessReviews
func (mr *MockAuthorizationV1InterfaceMockRecorder) SubjectAccessReviews() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubjectAccessReviews", reflect.TypeOf((*MockAuthorizationV1Interface)(nil).SubjectAccessReviews))
}

// MockSelfSubjectAccessReviewInterface is a mock of SelfSubjectAccessReviewInterface interface
type MockSelfSubjectAccessReviewInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSelfSubjectAccessReviewInterfaceMockRecorder
}

// MockSelfSubjectAccessReviewInterfaceMockRecorder is the mock recorder for MockSelfSubjectAccessReviewInterface
type MockSelfSubjectAccessReviewInterfaceMockRecorder struct {
	mock *MockSelfSubjectAccessReviewInterface
}

// NewMockSelfSubjectAccessReviewInterface creates a new mock instance
func NewMockSelfSubjectAccessReviewInterface(ctrl *gomock.Controller) *MockSelfSubjectAccessReviewInterface {
	mock := &MockSelfSubjectAccessReviewInterface{ctrl: ctrl}
	mock.recorder = &MockSelfSubjectAccessReviewInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSelfSubjectAccessReviewInterface) EXPECT() *MockSelfSubjectAccessReviewInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockSelfSubjectAccessReviewInterface) Create(arg0 context.Context, arg1 *v1.SelfSubjectAccessReview, arg2 v10.CreateOptions) (*v1.SelfSubjectAccessReview, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.SelfSubjectAccessReview)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockSelfSubjectAccessReviewInterfaceMockRecorder) Create(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSelfSubjectAccessReviewInterface)(nil).Create), arg0, arg1, arg2)
}

// MockSelfSubjectAccessReviewsGetter is a mock of SelfSubjectAccessReviewsGetter interface
type MockSelfSubjectAccessReviewsGetter struct {
	ctrl     *gomock.Controller
	recorder *MockSelfSubjectAccessReviewsGetterMockRecorder
}

// MockSelfSubjectAccessReviewsGetterMockRecorder is the mock recorder for MockSelfSubjectAccessReviewsGetter
type MockSelfSubjectAccessReviewsGetterMockRecorder struct {
	mock *MockSelfSubjectAccessReviewsGetter
}

// NewMockSelfSubjectAccessReviewsGetter creates a new mock instance
func NewMockSelfSubjectAccessReviewsGetter(ctrl *gomock.Controller) *MockSelfSubjectAccessReviewsGetter {
	mock := &MockSelfSubjectAccessReviewsGetter{ctrl: ctrl}
	mock.recorder = &MockSelfSubjectAccessReviewsGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSelfSubjectAccessReviewsGetter) EXPECT() *MockSelfSubjectAccessReviewsGetterMockRecorder {
	return m.recorder
}

// SelfSubjectAccessReviews mocks base method
func (m *MockSelfSubjectAccessReviewsGetter) SelfSubjectAccessReviews() v11.SelfSubjectAccessReviewInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelfSubjectAccessReviews")
	ret0, _ := ret[0].(v11.SelfSubjectAccessReviewInterface)
	return ret0
}

// SelfSubjectAccessReviews indicates an expected call of SelfSubjectAccessReviews
func (mr *MockSelfSubjectAccessReviewsGetterMockRecorder) SelfSubjectAccessReviews() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelfSubjectAccessReviews", reflect.TypeOf((*MockSelfSubjectAccessReviewsGetter)(nil).SelfSubjectAccessReviews))
}

// MockSelfSubjectRulesReviewInterface is a mock of SelfSubjectRulesReviewInterface interface
type MockSelfSubjectRulesReviewInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSelfSubjectRulesReviewInterfaceMockRecorder
}

// MockSelfSubjectRulesReviewInterfaceMockRecorder is the mock recorder for MockSelfSubjectRulesReviewInterface
type MockSelfSubjectRulesReviewInterfaceMockRecorder struct {
	mock *MockSelfSubjectRulesReviewInterface
}

// NewMockSelfSubjectRulesReviewInterface creates a new mock instance
func NewMockSelfSubjectRulesReviewInterface(ctrl *gomock.Controller) *MockSelfSubjectRulesReviewInterface {
	mock := &MockSelfSubjectRulesReviewInterface{ctrl: ctrl}
	mock.recorder = &MockSelfSubjectRulesReviewInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSelfSubjectRulesReviewInterface) EXPECT() *MockSelfSubjectRulesReviewInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockSelfSubjectRulesReviewInterface) Create(arg0 context.Context, arg1 *v1.SelfSubjectRulesReview, arg2 v10.CreateOptions) (*v1.SelfSubjectRulesReview, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.SelfSubjectRulesReview)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockSelfSubjectRulesReviewInterfaceMockRecorder) Create(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSelfSubjectRulesReviewInterface)(nil).Create), arg0, arg1, arg2)
}

// MockSelfSubjectRulesReviewsGetter is a mock of SelfSubjectRulesReviewsGetter interface
type MockSelfSubjectRulesReviewsGetter struct {
	ctrl     *gomock.Controller
	recorder *MockSelfSubjectRulesReviewsGetterMockRecorder
}

// MockSelfSubjectRulesReviewsGetterMockRecorder is the mock recorder for MockSelfSubjectRulesReviewsGetter
type MockSelfSubjectRulesReviewsGetterMockRecorder struct {
	mock *MockSelfSubjectRulesReviewsGetter
}

// NewMockSelfSubjectRulesReviewsGetter creates a new mock instance
func NewMockSelfSubjectRulesReviewsGetter(ctrl *gomock.Controller) *MockSelfSubjectRulesReviewsGetter {
	mock := &MockSelfSubjectRulesReviewsGetter{ctrl: ctrl}
	mock.recorder = &MockSelfSubjectRulesReviewsGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSelfSubjectRulesReviewsGetter) EXPECT() *MockSelfSubjectRulesReviewsGetterMockRecorder {
	return m.recorder
}

// SelfSubjectRulesReviews mocks base method
func (m *MockSelfSubjectRulesReviewsGetter) SelfSubjectRulesReviews() v11.SelfSubjectRulesReviewInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelfSubjectRulesReviews")
	ret0, _ := ret[0].(v11.SelfSubjectRulesReviewInterface)
	return ret0
}

// SelfSubjectRulesReviews indicates an expected call of SelfSubjectRulesReviews
func (mr *MockSelfSubjectRulesReviewsGetterMockRecorder) SelfSubjectRulesReviews() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelfSubjectRulesReviews", reflect.TypeOf((*MockSelfSubjectRulesReviewsGetter)(nil).SelfSubjectRulesReviews))
}
